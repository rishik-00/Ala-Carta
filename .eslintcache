[{"C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\index.js":"1","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\App.js":"2","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\reportWebVitals.js":"3","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\components\\menu.js":"4","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\shared\\dishes.js":"5","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\components\\detaildish.js":"6","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\components\\main.js":"7","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\components\\header.js":"8","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\components\\footer.js":"9","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\components\\home.js":"10","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\components\\contact.js":"11","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\shared\\leaders.js":"12","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\shared\\comments.js":"13","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\shared\\promotions.js":"14","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\components\\aboutus.js":"15","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\redux\\configureStore.js":"16","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\redux\\dishes.js":"17","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\redux\\comments.js":"18","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\redux\\leaders.js":"19","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\redux\\promotions.js":"20","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\redux\\ActionTypes.js":"21","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\redux\\ActionCreaters.js":"22","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\components\\loading.js":"23","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\redux\\forms.js":"24","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\shared\\baseURL.js":"25"},{"size":639,"mtime":1607973256737,"results":"26","hashOfConfig":"27"},{"size":497,"mtime":1608405943143,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"27"},{"size":1873,"mtime":1609530388594,"results":"30","hashOfConfig":"27"},{"size":1490,"mtime":1608043748364,"results":"31","hashOfConfig":"27"},{"size":7799,"mtime":1609600226949,"results":"32","hashOfConfig":"27"},{"size":3491,"mtime":1609591123153,"results":"33","hashOfConfig":"27"},{"size":5128,"mtime":1608227563889,"results":"34","hashOfConfig":"27"},{"size":2631,"mtime":1608029778228,"results":"35","hashOfConfig":"27"},{"size":1749,"mtime":1609598645875,"results":"36","hashOfConfig":"27"},{"size":10434,"mtime":1609015359554,"results":"37","hashOfConfig":"27"},{"size":2382,"mtime":1608043882445,"results":"38","hashOfConfig":"27"},{"size":4279,"mtime":1608043912529,"results":"39","hashOfConfig":"27"},{"size":445,"mtime":1608043843785,"results":"40","hashOfConfig":"27"},{"size":4568,"mtime":1608125763926,"results":"41","hashOfConfig":"27"},{"size":760,"mtime":1609529786907,"results":"42","hashOfConfig":"27"},{"size":542,"mtime":1608997085967,"results":"43","hashOfConfig":"27"},{"size":576,"mtime":1609533565589,"results":"44","hashOfConfig":"27"},{"size":162,"mtime":1608482723535,"results":"45","hashOfConfig":"27"},{"size":560,"mtime":1609529165417,"results":"46","hashOfConfig":"27"},{"size":412,"mtime":1609527813221,"results":"47","hashOfConfig":"27"},{"size":3742,"mtime":1609533517340,"results":"48","hashOfConfig":"27"},{"size":221,"mtime":1608998530580,"results":"49","hashOfConfig":"27"},{"size":148,"mtime":1609013828443,"results":"50","hashOfConfig":"27"},{"size":48,"mtime":1609527694260,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"8f7y4r",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\index.js",[],["108","109"],"C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\App.js",[],"C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\reportWebVitals.js",[],"C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\components\\menu.js",["110","111","112"],"import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport img from \"C:/Users/Rishik/Desktop/Web/reactapp/src/shared/assets/13.jpg\";\r\nimport { Link } from 'react-router-dom';\r\nimport {Loading } from './loading';\r\nimport { baseUrl } from '../shared/baseURL';\r\n\r\nfunction Rendermenu({dish, onClick}){\r\n\t\treturn(\r\n\t\t\t\t<Card >\r\n\t\t\t\t\t<Link to= {`/menu/${dish.id}`} >\r\n\r\n\t\t\t\t\t\t<CardImg width='100%' src = {baseUrl + dish.image} alt = {dish.name} />\r\n\t\t\t\t\t\t<CardImgOverlay>\r\n\t\t\t\t\t\t\t<CardTitle>{dish.name}</CardTitle>\r\n\t\t\t\t\t\t</CardImgOverlay>\r\n\t\t\t\t\t</Link>\t\r\n\t\t\t\t</Card>\r\n\r\n\t\t\t);\r\n}\r\n\r\nconst Menu = (props)=>{\r\n\tconst menu = props.dishes.dishes.map((dish)=> {\r\n\t\t\treturn(\r\n\t\t\t\t<div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n\t\t\t\t\t<Rendermenu dish = {dish} />\r\n\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t}); \r\n\t\tif(props.dishes.isLoading) {\r\n\t\t\t return (\r\n                <div className=\"container\">\r\n                  <div className=\"row\">\r\n                    <Loading />\r\n                  </div>\r\n                </div>\r\n              )\r\n          }\r\n          \r\n          else if (props.dishes.errmess){\r\n            return (\r\n                <div className=\"container\">\r\n                  <div className=\"row\">\r\n                    <h4>{props.dishes.errmess}</h4>\r\n                  </div>\r\n                </div>\r\n              )\r\n          }\r\n\t\telse \r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<Breadcrumb>\r\n\t\t\t\t\t\t<BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n\t\t\t\t\t\t<BreadcrumbItem active>Menu</BreadcrumbItem>\r\n\t\t\t\t\t</Breadcrumb>\r\n\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t<h3>Menu</h3>\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className =\"row\">\r\n\t\t\t\t\t {menu}\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t);\r\n\r\n}\r\n\t\t\r\n\t\t\r\n\t\r\n\r\nexport default Menu;\r\n\r\n","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\shared\\dishes.js",[],"C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\components\\detaildish.js",["113","114","115","116","117"],"import React, { Component} from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal,  ModalHeader, ModalBody, ModalFooter, Row, Label, Col  } from 'reactstrap';\r\nimport { Control, Errors, LocalForm } from 'react-redux-form';\r\nimport img from \"C:/Users/Rishik/Desktop/Web/reactapp/src/shared/assets/13.jpg\";\r\nimport  { Link } from 'react-router-dom';\r\nimport { Loading } from './loading';\r\nimport { baseUrl } from '../shared/baseURL';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderDish({dish})\r\n    {\r\n        return(\r\n          <div className='row'>\r\n          <FadeTransform in\r\n            transformProps={{\r\n              exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n        <Card>\r\n            <CardImg width='100%' src={baseUrl + dish.image} alt={dish.name}/>\r\n            <CardBody>\r\n                <CardTitle>\r\n                    {dish.name}\r\n                </CardTitle>\r\n            </CardBody>\r\n            <CardText>\r\n                {dish.description}\r\n            </CardText>\r\n        </Card>\r\n        </FadeTransform>\r\n        </div>\r\n)\r\n    }\r\n     function RenderComments({comments, postComment, dishId})\r\n    {  \r\n            \r\n            const commentsTobeRendered = comments.map( (temp_comment, index) => {\r\n            return (\r\n                <Fade in>\r\n                <div key={index}>\r\n                    <p>{temp_comment.comment}</p>\r\n                    <p>-- {temp_comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(temp_comment.date)))}</p>\r\n                </div>\r\n                </Fade>\r\n            )\r\n        })\r\n        return(\r\n            <div>\r\n                <h4>Comments</h4>\r\n                <Stagger in>\r\n                {commentsTobeRendered}\r\n                </Stagger>\r\n                <CommentForm dishId ={dishId} postComment = {postComment}/>\r\n            </div>\r\n        );\r\n\r\n                    \r\n                \r\n\r\n            \r\n        \r\n    }\r\n   const DishDetail = (props) =>\r\n    {\r\n          if(props.isLoading) {\r\n            return (\r\n                <div className=\"container\">\r\n                  <div className=\"row\">\r\n                    <Loading />\r\n                  </div>\r\n                </div>\r\n              )\r\n          }\r\n          \r\n          else if (props.errmess){\r\n            return (\r\n                <div className=\"container\">\r\n                  <div className=\"row\">\r\n                    <h4>{props.errmess}</h4>\r\n                  </div>\r\n                </div>\r\n              )\r\n          }\r\n          else if(props.dish!=null)\r\n            {\r\n                \r\n                return(\r\n                    <div className = 'container'>\r\n                        <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        \r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                <h3>{props.dish.name}</h3>\r\n                                <hr/>\r\n                                </div>\r\n                            </div>  \r\n                            <div className='row'>\r\n                                <div className='col-12 col-md-5 m-1'>\r\n                                    <RenderDish dish ={props.dish} />\r\n                                </div>\r\n                            \r\n                                <div className='col-12 col-md-5 m-1'>\r\n                                    <RenderComments comments = {props.comments} \r\n                                        postComment = {props.postComment}\r\n                                        dishId = {props.dish.id}/>\r\n                                </div>\r\n                            \r\n                            </div>\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n            {\r\n                \r\n                return(<div>\r\n\r\n                </div>);\r\n            }\r\n       \r\n    }\r\n\r\n\r\nclass CommentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false\r\n    };\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    });\r\n  }\r\n\r\n  handleSubmit(values){\r\n    this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n        \r\n    }\r\n\r\n  render() {\r\n    const required = val => val && val.length;\r\n    const maxLength = len => val => !val || val.length <= len;\r\n    const minLength = len => val => val && val.length >= len;\r\n    return (\r\n      <div>\r\n        <Button outline onClick={this.toggleModal}>\r\n          <span className=\"fa fa-pencil\" /> Submit Comment\r\n        </Button>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={this.handleSubmit}>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"rating\" md={12}>\r\n                  Rating\r\n                </Label>\r\n                <Col md={{ size: 12 }}>\r\n                  <Control.select\r\n                    model=\".rating\"\r\n                    name=\"rating\"\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                    <option>4</option>\r\n                    <option>5</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"author\" md={12}>\r\n                  Your Name\r\n                </Label>\r\n                <Col md={12}>\r\n                  <Control.text\r\n                    model=\".author\"\r\n                    id=\"author\"\r\n                    name=\"author\"\r\n                    placeholder=\"Your Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15)\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".author\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 characters\",\r\n                      maxLength: \"Must be 15 characters or less\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"comment\" md={12}>\r\n                  Comment\r\n                </Label>\r\n                <Col md={12}>\r\n                  <Control.textarea\r\n                    model=\".comment\"\r\n                    id=\"comment\"\r\n                    name=\"comment\"\r\n                    rows={5}\r\n                    className=\"form-control\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DishDetail;\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\components\\main.js",["118"],"C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\components\\header.js",[],"C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\components\\footer.js",[],"C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\components\\home.js",["119"],"C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\components\\contact.js",["120","121","122","123","124","125","126","127","128"],"import React, { Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button,  Label, Col, Row} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, actions, Errors} from 'react-redux-form';\r\n\r\n\r\nconst required  =(val) => val&&val.length;\r\nconst maxLength = (len) => (val) =>!(val)||(val.length<=len)\r\nconst minLength = (len) => (val) => (val)&&(val.length>=len)\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9,_%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component  {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n            \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n       \r\n    }\r\n\r\n    \r\n\r\n    handleSubmit(values){\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        \r\n    }\r\n\r\n    \r\n    \r\n    render()\r\n   { \r\n   \r\n    return(\r\n           \r\n           <div className=\"container\">\r\n               <div className=\"row row-content\">\r\n                   <Breadcrumb>\r\n                           <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                           <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                       </Breadcrumb>\r\n                       <div className=\"col-12\">\r\n                           <h3>Contact Us</h3>\r\n                           <hr />\r\n                       </div>\r\n                   <div className=\"col-12\">\r\n                   <h3>Location Information</h3>\r\n                   </div>\r\n                   <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                           <h5>Our Address</h5>\r\n                           <address>\r\n                           121, Clear Water Bay Road<br />\r\n                           Clear Water Bay, Kowloon<br />\r\n                           HONG KONG<br />\r\n                           <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                           <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                           <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                           </address>\r\n                   </div>\r\n                   <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                       <h5>Map of our Location</h5>\r\n                   </div>\r\n                   <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                       <div className=\"btn-group\" role=\"group\">\r\n                           <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                           <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                           <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                         <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                          required, minLength:minLength(3), maxLength:maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                         <Errors  className=\"text-danger\" model=\".firstname\" show  = \"touched\" \r\n                                         messages={{\r\n                                            required: 'required',\r\n                                            minLength: 'Must be greater than 2',\r\n                                            maxLength: 'Must be 15 characters or Less'\r\n                                         }}\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                          required, minLength:minLength(3), maxLength:maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                         <Errors  className=\"text-danger\" model=\".lastname\" show  = \"touched\" \r\n                                         messages={{\r\n                                            required: 'required',\r\n                                            minLength: 'Must be greater than 2',\r\n                                            maxLength: 'Must be 15 characters or Less'\r\n                                         }}\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                          required, minLength:minLength(3), maxLength:maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                       <Errors  className=\"text-danger\" model=\".telnum\" show  = \"touched\" \r\n                                         messages={{\r\n                                            required: 'required',\r\n                                            minLength: 'Must be greater than 2',\r\n                                            maxLength: 'Must be 15 characters or Less',\r\n                                            isNumber: 'Must be number'\r\n                                         }}\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                         validators={{\r\n                                          required, validEmail\r\n                                        }}\r\n                                        />\r\n                                      <Errors  className=\"text-danger\" model=\".email\" show  = \"touched\" \r\n                                         messages={{\r\n                                            required: 'required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                         }}\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n\r\n               </div>\r\n       );\r\n   }}\r\n\r\nexport default Contact;","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\shared\\leaders.js",[],"C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\shared\\comments.js",[],["129","130"],"C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\shared\\promotions.js",[],"C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\components\\aboutus.js",[],"C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\redux\\configureStore.js",[],"C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\redux\\dishes.js",[],"C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\redux\\comments.js",[],"C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\redux\\leaders.js",[],"C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\redux\\promotions.js",[],"C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\redux\\ActionTypes.js",[],"C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\redux\\ActionCreaters.js",["131"],"import * as ActionTypes from './ActionTypes';\r\nimport { DISHES } from '../shared/dishes';\r\nimport { baseUrl } from '../shared/baseURL';\r\n\r\nexport const addComment = ( comment) => ({\r\n\ttype: ActionTypes.ADD_COMMENT,\r\n\tpayload: comment\r\n}); \r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\tconst newComment = {\r\n\t\tdishId: dishId,\r\n\t\trating: rating,\r\n\t\tauthor: author,\r\n\t\tcomment: comment\r\n\t}\r\n\tnewComment.date = new Date().toISOString();\r\n\r\n\treturn fetch(baseUrl + 'comments', {\r\n\t\tmethod: 'POST',\r\n\t\tbody: JSON.stringify(newComment),\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t},\r\n\t\tcredentials: 'same-origin'\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tif(response.ok){\r\n\t\t\t\treturn response;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar error = new Error('Error' + response.status + ':' + response.statusText);\r\n\t\t\t\terror.response = response;\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t}, \r\n\t\terror => {\r\n\t\t\tvar errmess = new Error(error.message);\r\n\t\t\tthrow errmess;\r\n\t\t\t})\r\n\t\t    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\tdispatch(dishesLoading(true));\r\n\r\n\treturn fetch(baseUrl + 'dishes')\r\n\t\t.then(response => {\r\n\t\t\tif(response.ok){\r\n\t\t\t\treturn response;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar error = new Error('Error' + response.status + ':' + response.statusText);\r\n\t\t\t\terror.response = response;\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t}, \r\n\t\terror => {\r\n\t\t\tvar errmess = new Error(error.message);\r\n\t\t\tthrow errmess;\r\n\t\t\t})\r\n\t\t.then(response => response.json())\r\n\t\t.then(dishes => dispatch(addDishes(dishes)))\r\n\t\t.catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\ntype: ActionTypes.DISHES_LOADING\t\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n\ttype: ActionTypes.DISHES_FAILED,\r\n\tpayload: errmess\r\n});\r\n\r\n\r\nexport const addDishes = (dishes) => ({\r\n\ttype: ActionTypes.ADD_DISHES,\r\n\tpayload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n\treturn fetch(baseUrl + 'comments')\r\n\t\t.then(response => {\r\n\t\t\tif(response.ok){\r\n\t\t\t\treturn response;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar error = new Error('Error' + response.status + ':' + response.statusText);\r\n\t\t\t\terror.response = response;\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t}, \r\n\t\terror => {\r\n\t\t\tvar errmess = new Error(error.message);\r\n\t\t\tthrow errmess;\r\n\t\t\t})\r\n\t\t.then(response => response.json())\r\n\t\t.then(comments => dispatch(addComments(comments)))\r\n\t\t .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n\ttype: ActionTypes.COMMENTS_FAILED,\r\n\tpayload: errmess\r\n});\r\n\r\n\r\nexport const addComments = (comments) => ({\r\n\ttype: ActionTypes.ADD_COMMENTS,\r\n\tpayload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n\tdispatch(promosLoading(true));\r\n\r\n\treturn fetch(baseUrl + 'promotions')\r\n\t\t.then(response => {\r\n\t\t\tif(response.ok){\r\n\t\t\t\treturn response;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar error = new Error('Error' + response.status + ':' + response.statusText);\r\n\t\t\t\terror.response = response;\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t}, \r\n\t\terror => {\r\n\t\t\tvar errmess = new Error(error.message);\r\n\t\t\tthrow errmess;\r\n\t\t\t})\r\n\t\t.then(response => response.json())\r\n\t\t.then(promos => dispatch(addPromos(promos)))\r\n\t\t.catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\ntype: ActionTypes.PROMOS_LOADING\t\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n\ttype: ActionTypes.PROMOS_FAILED,\r\n\tpayload: errmess\r\n});\r\n\r\n\r\nexport const addPromos = (promos) => ({\r\n\ttype: ActionTypes.ADD_PROMOS,\r\n\tpayload: promos\r\n});\r\n","C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\components\\loading.js",[],"C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\redux\\forms.js",[],"C:\\Users\\Rishik\\Desktop\\Web\\reactapp\\src\\shared\\baseURL.js",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":2,"column":41,"nodeType":"138","messageId":"139","endLine":2,"endColumn":49},{"ruleId":"136","severity":1,"message":"140","line":2,"column":51,"nodeType":"138","messageId":"139","endLine":2,"endColumn":59},{"ruleId":"136","severity":1,"message":"141","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":11},{"ruleId":"136","severity":1,"message":"142","line":3,"column":84,"nodeType":"138","messageId":"139","endLine":3,"endColumn":95},{"ruleId":"136","severity":1,"message":"141","line":5,"column":8,"nodeType":"138","messageId":"139","endLine":5,"endColumn":11},{"ruleId":"143","severity":1,"message":"144","line":166,"column":19,"nodeType":"145","endLine":170,"endColumn":20},{"ruleId":"143","severity":1,"message":"146","line":184,"column":19,"nodeType":"145","endLine":195,"endColumn":21},{"ruleId":"143","severity":1,"message":"147","line":213,"column":19,"nodeType":"145","endLine":219,"endColumn":21},{"ruleId":"148","severity":1,"message":"149","line":35,"column":3,"nodeType":"150","messageId":"151","endLine":39,"endColumn":4},{"ruleId":"136","severity":1,"message":"141","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":11},{"ruleId":"136","severity":1,"message":"152","line":4,"column":25,"nodeType":"138","messageId":"139","endLine":4,"endColumn":32},{"ruleId":"153","severity":1,"message":"154","line":69,"column":28,"nodeType":"145","endLine":69,"endColumn":70},{"ruleId":"143","severity":1,"message":"146","line":84,"column":37,"nodeType":"145","endLine":90,"endColumn":44},{"ruleId":"143","severity":1,"message":"146","line":103,"column":37,"nodeType":"145","endLine":109,"endColumn":44},{"ruleId":"143","severity":1,"message":"146","line":122,"column":37,"nodeType":"145","endLine":128,"endColumn":44},{"ruleId":"143","severity":1,"message":"146","line":142,"column":37,"nodeType":"145","endLine":148,"endColumn":43},{"ruleId":"143","severity":1,"message":"155","line":161,"column":45,"nodeType":"145","endLine":163,"endColumn":52},{"ruleId":"143","severity":1,"message":"144","line":169,"column":37,"nodeType":"145","endLine":170,"endColumn":66},{"ruleId":"143","severity":1,"message":"147","line":179,"column":37,"nodeType":"145","endLine":181,"endColumn":68},{"ruleId":"132","replacedBy":"156"},{"ruleId":"134","replacedBy":"157"},{"ruleId":"136","severity":1,"message":"158","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'CardText' is defined but never used.","Identifier","unusedVar","'CardBody' is defined but never used.","'img' is defined but never used.","'ModalFooter' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'actions' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["159"],["160"],"'DISHES' is defined but never used.","no-global-assign","no-unsafe-negation"]